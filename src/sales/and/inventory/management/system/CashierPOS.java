/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sales.and.inventory.management.system;

import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author juanm
 */
public class CashierPOS extends javax.swing.JFrame {
    private static final String username = JDBC.username;
    private static final String password = JDBC.password;
    private static final String dataConn = JDBC.dataConn;
    public static String userloggedin = Signin.userloggedin;
    public static int userID = Signin.userID;
    public static String SystemDate = null;
    public static String Gcash = GcashReference.Gcash;
    public static String MoP = Checkout.ModeofPayment;
    public static int Payment = Checkout.payment;
    public static JFrame frame;
    static Connection sqlConn =null;
    static PreparedStatement pst = null, pst2 = null, pst3 = null, pst4 = null,pst5 = null,pst6 = null,pst7 = null,pst8 = null;
    static ResultSet rs=null, rs2=null,rs3=null, rs4=null, rs5=null,rs6=null, r7=null, rs8=null;
    JDBC db = new JDBC();
    generateReceipt g = new generateReceipt();
    /**
     * Creates new form CashierPOS
     */
    public CashierPOS() {     
        initComponents();
        init();
        Main Cashier = new Main();
        showDate();
        showTime();
        JDBC db = new JDBC();
        db.Connect();
        updateAccountInfo();
        getUserInfo();
        generateSalesandInventoryDocumentsFolder();
        generateTapeReceiptFolder();
        setBackground(new Color(0,0,0,0));
    }
    
   public void showDate()
        {
            Date d = new Date();
            SimpleDateFormat s = new SimpleDateFormat("dd-MM-yyyy");
            String dat = s.format(d);
            Datetxt2.setText(dat);
            Datetxt3.setText(dat);
        }
        
        public void showTime()
        {
            new Timer (0, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent ae)
                {
                    Date d = new Date();
                    SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss");
                    String tim = s.format(d);
                    Timetxt2.setText(tim);
                    Timetxt3.setText(tim);
                }
            }) .start();
        }
        
        public final void getUserInfo(){
            cashiername.setText(userloggedin);
        }
        
        private void init(){
            POSTable.fixTable(jScrollPane1);
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        panelBorder1 = new swing.PanelBorder();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        POSP = new javax.swing.JPanel();
        DeleteOrder = new javax.swing.JButton();
        ResetOrder = new javax.swing.JButton();
        EditOrder = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        cashiername = new javax.swing.JLabel();
        panelBorder16 = new swing.PanelBorder();
        jLabel100 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        Datetxt2 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        Timetxt2 = new javax.swing.JLabel();
        panelBorder2 = new swing.PanelBorder();
        jScrollPane1 = new javax.swing.JScrollPane();
        POSTable = new swing.Table();
        jScrollPane5 = new javax.swing.JScrollPane();
        ReceiptPreview = new javax.swing.JTextArea();
        btnCheckout = new javax.swing.JButton();
        DeleteOrder1 = new javax.swing.JButton();
        txtChange = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        txtTotalAmount = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        txtBarcode = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        AccountP = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        Lastname = new javax.swing.JTextField();
        EmailAddress = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        PhoneNumber = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        Username = new javax.swing.JTextField();
        SaveChanges2 = new javax.swing.JButton();
        TINEdit1 = new javax.swing.JLabel();
        TINEdit2 = new javax.swing.JLabel();
        TINEdit3 = new javax.swing.JLabel();
        Firstname = new javax.swing.JTextField();
        SignOut = new javax.swing.JButton();
        TINEdit4 = new javax.swing.JLabel();
        TINEdit5 = new javax.swing.JLabel();
        ChangePassword = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        panelBorder13 = new swing.PanelBorder();
        jLabel79 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        Datetxt3 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        Timetxt3 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        panelBorder1.setBackground(new java.awt.Color(102, 255, 204));

        jTabbedPane1.setBackground(new java.awt.Color(102, 255, 204));
        jTabbedPane1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(102, 255, 204));

        POSP.setBackground(new java.awt.Color(102, 255, 204));

        DeleteOrder.setBackground(new java.awt.Color(102, 0, 204));
        DeleteOrder.setFont(new java.awt.Font("Roboto", 0, 27)); // NOI18N
        DeleteOrder.setForeground(new java.awt.Color(255, 255, 255));
        DeleteOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sales/and/inventory/management/system/icons/bin.png"))); // NOI18N
        DeleteOrder.setText("Delete Order");
        DeleteOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeleteOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteOrderMouseClicked(evt);
            }
        });
        DeleteOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteOrderActionPerformed(evt);
            }
        });

        ResetOrder.setBackground(new java.awt.Color(102, 0, 204));
        ResetOrder.setFont(new java.awt.Font("Roboto", 0, 27)); // NOI18N
        ResetOrder.setForeground(new java.awt.Color(255, 255, 255));
        ResetOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sales/and/inventory/management/system/icons/reset.png"))); // NOI18N
        ResetOrder.setText("Reset Order");
        ResetOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ResetOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResetOrderMouseClicked(evt);
            }
        });
        ResetOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetOrderActionPerformed(evt);
            }
        });

        EditOrder.setBackground(new java.awt.Color(102, 0, 204));
        EditOrder.setFont(new java.awt.Font("Roboto", 0, 27)); // NOI18N
        EditOrder.setForeground(new java.awt.Color(255, 255, 255));
        EditOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sales/and/inventory/management/system/icons/pencil.png"))); // NOI18N
        EditOrder.setText("Edit Order");
        EditOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EditOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditOrderMouseClicked(evt);
            }
        });
        EditOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditOrderActionPerformed(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        jLabel44.setText("Cashier:");

        cashiername.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N

        panelBorder16.setBackground(new java.awt.Color(255, 255, 255));

        jLabel100.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sales/and/inventory/management/system/icons/Logo.png"))); // NOI18N

        jLabel60.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sales/and/inventory/management/system/icons/cashier.png"))); // NOI18N

        jLabel28.setFont(new java.awt.Font("Roboto", 0, 30)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 0, 51));
        jLabel28.setText("Point of Sale");

        jLabel71.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sales/and/inventory/management/system/icons/Calendar2.png"))); // NOI18N

        Datetxt2.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        Datetxt2.setForeground(new java.awt.Color(0, 0, 51));
        Datetxt2.setText("Date");

        jLabel72.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sales/and/inventory/management/system/icons/clock.png"))); // NOI18N

        Timetxt2.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        Timetxt2.setForeground(new java.awt.Color(0, 0, 51));
        Timetxt2.setText("Time");

        javax.swing.GroupLayout panelBorder16Layout = new javax.swing.GroupLayout(panelBorder16);
        panelBorder16.setLayout(panelBorder16Layout);
        panelBorder16Layout.setHorizontalGroup(
            panelBorder16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder16Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel60)
                .addGap(18, 18, 18)
                .addComponent(jLabel28)
                .addGap(101, 101, 101)
                .addComponent(jLabel100)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelBorder16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder16Layout.createSequentialGroup()
                        .addComponent(jLabel71)
                        .addGap(18, 18, 18)
                        .addComponent(Datetxt2))
                    .addGroup(panelBorder16Layout.createSequentialGroup()
                        .addComponent(jLabel72)
                        .addGap(18, 18, 18)
                        .addComponent(Timetxt2)))
                .addGap(41, 41, 41))
        );
        panelBorder16Layout.setVerticalGroup(
            panelBorder16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder16Layout.createSequentialGroup()
                .addGroup(panelBorder16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder16Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(panelBorder16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel60)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelBorder16Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel100, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder16Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(panelBorder16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel71)
                    .addComponent(Datetxt2))
                .addGap(18, 18, 18)
                .addGroup(panelBorder16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel72)
                    .addComponent(Timetxt2))
                .addGap(40, 40, 40))
        );

        panelBorder2.setBackground(new java.awt.Color(255, 255, 255));

        POSTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Quantity", "Unit Price", "Total Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        POSTable.getColumnModel().getColumn(0).setPreferredWidth(100);
        POSTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        POSTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        POSTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        POSTable.getColumnModel().getColumn(4).setPreferredWidth(100);
        jScrollPane1.setViewportView(POSTable);

        javax.swing.GroupLayout panelBorder2Layout = new javax.swing.GroupLayout(panelBorder2);
        panelBorder2.setLayout(panelBorder2Layout);
        panelBorder2Layout.setHorizontalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 685, Short.MAX_VALUE)
            .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelBorder2Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        panelBorder2Layout.setVerticalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 501, Short.MAX_VALUE)
            .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelBorder2Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        ReceiptPreview.setColumns(20);
        ReceiptPreview.setRows(5);
        jScrollPane5.setViewportView(ReceiptPreview);

        btnCheckout.setBackground(new java.awt.Color(102, 0, 204));
        btnCheckout.setFont(new java.awt.Font("Roboto", 0, 27)); // NOI18N
        btnCheckout.setForeground(new java.awt.Color(255, 255, 255));
        btnCheckout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sales/and/inventory/management/system/icons/checkout.png"))); // NOI18N
        btnCheckout.setText("Checkout");
        btnCheckout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCheckout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCheckoutMouseClicked(evt);
            }
        });
        btnCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckoutActionPerformed(evt);
            }
        });

        DeleteOrder1.setBackground(new java.awt.Color(102, 0, 204));
        DeleteOrder1.setFont(new java.awt.Font("Roboto", 0, 27)); // NOI18N
        DeleteOrder1.setForeground(new java.awt.Color(255, 255, 255));
        DeleteOrder1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sales/and/inventory/management/system/icons/search.png"))); // NOI18N
        DeleteOrder1.setText("Check Price");
        DeleteOrder1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeleteOrder1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteOrder1MouseClicked(evt);
            }
        });
        DeleteOrder1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteOrder1ActionPerformed(evt);
            }
        });

        txtChange.setEditable(false);
        txtChange.setBackground(new java.awt.Color(102, 102, 102));
        txtChange.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N

        jLabel46.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel46.setText("Change");

        txtTotalAmount.setEditable(false);
        txtTotalAmount.setBackground(new java.awt.Color(102, 102, 102));
        txtTotalAmount.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N

        jLabel45.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel45.setText("Total Amount");

        txtBarcode.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        txtBarcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBarcodeActionPerformed(evt);
            }
        });
        txtBarcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBarcodeKeyPressed(evt);
            }
        });

        jLabel68.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel68.setText("Barcode");

        javax.swing.GroupLayout POSPLayout = new javax.swing.GroupLayout(POSP);
        POSP.setLayout(POSPLayout);
        POSPLayout.setHorizontalGroup(
            POSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(POSPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(POSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelBorder16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(POSPLayout.createSequentialGroup()
                        .addGroup(POSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(POSPLayout.createSequentialGroup()
                                .addComponent(ResetOrder)
                                .addGap(18, 18, 18)
                                .addComponent(EditOrder)
                                .addGap(18, 18, 18)
                                .addComponent(DeleteOrder))
                            .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addGroup(POSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(POSPLayout.createSequentialGroup()
                                .addGap(200, 200, 200)
                                .addComponent(jLabel68))
                            .addGroup(POSPLayout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addGroup(POSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel45)
                                    .addComponent(txtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel46)
                                    .addComponent(txtChange, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DeleteOrder1)
                                    .addComponent(btnCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(POSPLayout.createSequentialGroup()
                                .addComponent(jLabel44)
                                .addGap(18, 18, 18)
                                .addComponent(cashiername, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        POSPLayout.setVerticalGroup(
            POSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(POSPLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelBorder16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(POSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, POSPLayout.createSequentialGroup()
                        .addGroup(POSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ResetOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EditOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DeleteOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(POSPLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(POSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cashiername, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel44))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel68)
                        .addGap(16, 16, 16)
                        .addGroup(POSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(POSPLayout.createSequentialGroup()
                                .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel45)
                                .addGap(16, 16, 16)
                                .addComponent(txtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel46)
                                .addGap(16, 16, 16)
                                .addComponent(txtChange, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(DeleteOrder1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(btnCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(POSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(POSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Point of Sale", jPanel1);

        jPanel2.setBackground(new java.awt.Color(102, 255, 204));

        AccountP.setBackground(new java.awt.Color(102, 255, 204));

        jLabel56.setBackground(new java.awt.Color(255, 0, 255));
        jLabel56.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(0, 0, 51));
        jLabel56.setText("Enter your first name");

        jLabel57.setBackground(new java.awt.Color(255, 0, 255));
        jLabel57.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(0, 0, 51));
        jLabel57.setText("Enter your last name");

        Lastname.setEditable(false);
        Lastname.setBackground(new java.awt.Color(128, 128, 128));
        Lastname.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        Lastname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                LastnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                LastnameFocusLost(evt);
            }
        });
        Lastname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LastnameActionPerformed(evt);
            }
        });

        EmailAddress.setEditable(false);
        EmailAddress.setBackground(new java.awt.Color(128, 128, 128));
        EmailAddress.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        EmailAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                EmailAddressFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                EmailAddressFocusLost(evt);
            }
        });
        EmailAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailAddressActionPerformed(evt);
            }
        });

        jLabel58.setBackground(new java.awt.Color(255, 0, 255));
        jLabel58.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(0, 0, 51));
        jLabel58.setText("Phone Number");

        jLabel52.setBackground(new java.awt.Color(255, 0, 255));
        jLabel52.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(0, 0, 51));
        jLabel52.setText("Username");

        PhoneNumber.setEditable(false);
        PhoneNumber.setBackground(new java.awt.Color(128, 128, 128));
        PhoneNumber.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        PhoneNumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PhoneNumberFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PhoneNumberFocusLost(evt);
            }
        });
        PhoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhoneNumberActionPerformed(evt);
            }
        });

        jLabel53.setBackground(new java.awt.Color(255, 0, 255));
        jLabel53.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(0, 0, 51));
        jLabel53.setText("Email Address");

        Username.setEditable(false);
        Username.setBackground(new java.awt.Color(128, 128, 128));
        Username.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        Username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                UsernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                UsernameFocusLost(evt);
            }
        });
        Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameActionPerformed(evt);
            }
        });

        SaveChanges2.setBackground(new java.awt.Color(0, 0, 51));
        SaveChanges2.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        SaveChanges2.setForeground(new java.awt.Color(255, 255, 255));
        SaveChanges2.setText("Save Changes");
        SaveChanges2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SaveChanges2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SaveChanges2MouseClicked(evt);
            }
        });
        SaveChanges2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveChanges2ActionPerformed(evt);
            }
        });

        TINEdit1.setBackground(new java.awt.Color(255, 0, 255));
        TINEdit1.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        TINEdit1.setForeground(new java.awt.Color(51, 0, 204));
        TINEdit1.setText("Edit");
        TINEdit1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TINEdit1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TINEdit1MouseClicked(evt);
            }
        });

        TINEdit2.setBackground(new java.awt.Color(255, 0, 255));
        TINEdit2.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        TINEdit2.setForeground(new java.awt.Color(51, 0, 204));
        TINEdit2.setText("Edit");
        TINEdit2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TINEdit2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TINEdit2MouseClicked(evt);
            }
        });

        TINEdit3.setBackground(new java.awt.Color(255, 0, 255));
        TINEdit3.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        TINEdit3.setForeground(new java.awt.Color(51, 0, 204));
        TINEdit3.setText("Edit");
        TINEdit3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TINEdit3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TINEdit3MouseClicked(evt);
            }
        });

        Firstname.setEditable(false);
        Firstname.setBackground(new java.awt.Color(128, 128, 128));
        Firstname.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        Firstname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                FirstnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                FirstnameFocusLost(evt);
            }
        });
        Firstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstnameActionPerformed(evt);
            }
        });

        SignOut.setBackground(new java.awt.Color(0, 0, 51));
        SignOut.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        SignOut.setForeground(new java.awt.Color(255, 255, 255));
        SignOut.setText("Sign Out");
        SignOut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SignOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SignOutMouseClicked(evt);
            }
        });
        SignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignOutActionPerformed(evt);
            }
        });

        TINEdit4.setBackground(new java.awt.Color(255, 0, 255));
        TINEdit4.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        TINEdit4.setForeground(new java.awt.Color(51, 0, 204));
        TINEdit4.setText("Edit");
        TINEdit4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TINEdit4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TINEdit4MouseClicked(evt);
            }
        });

        TINEdit5.setBackground(new java.awt.Color(255, 0, 255));
        TINEdit5.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        TINEdit5.setForeground(new java.awt.Color(51, 0, 204));
        TINEdit5.setText("Edit");
        TINEdit5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TINEdit5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TINEdit5MouseClicked(evt);
            }
        });

        ChangePassword.setBackground(new java.awt.Color(0, 0, 51));
        ChangePassword.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        ChangePassword.setForeground(new java.awt.Color(255, 255, 255));
        ChangePassword.setText("Change Password");
        ChangePassword.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ChangePassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChangePasswordMouseClicked(evt);
            }
        });
        ChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangePasswordActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sales/and/inventory/icons/LogoFish.png"))); // NOI18N

        javax.swing.GroupLayout AccountPLayout = new javax.swing.GroupLayout(AccountP);
        AccountP.setLayout(AccountPLayout);
        AccountPLayout.setHorizontalGroup(
            AccountPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccountPLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(AccountPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AccountPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AccountPLayout.createSequentialGroup()
                            .addGroup(AccountPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(Lastname)
                                .addComponent(Firstname, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(AccountPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(TINEdit2)
                                .addComponent(TINEdit1)))
                        .addGroup(AccountPLayout.createSequentialGroup()
                            .addComponent(EmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(TINEdit4))
                        .addGroup(AccountPLayout.createSequentialGroup()
                            .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(TINEdit3)))
                    .addComponent(jLabel53)
                    .addComponent(jLabel52)
                    .addComponent(jLabel57)
                    .addComponent(jLabel56)
                    .addGroup(AccountPLayout.createSequentialGroup()
                        .addComponent(SaveChanges2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ChangePassword)
                        .addGap(12, 12, 12)
                        .addComponent(SignOut))
                    .addGroup(AccountPLayout.createSequentialGroup()
                        .addComponent(PhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TINEdit5))
                    .addComponent(jLabel58))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 177, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        AccountPLayout.setVerticalGroup(
            AccountPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(AccountPLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(AccountPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AccountPLayout.createSequentialGroup()
                        .addComponent(jLabel56)
                        .addGap(18, 18, 18)
                        .addGroup(AccountPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Firstname, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TINEdit1))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel57)
                        .addGap(18, 18, 18)
                        .addGroup(AccountPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lastname, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TINEdit2))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel52)
                        .addGap(18, 18, 18)
                        .addGroup(AccountPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TINEdit3))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel53)
                        .addGap(18, 18, 18)
                        .addGroup(AccountPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TINEdit4))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel58)
                        .addGap(17, 17, 17)
                        .addGroup(AccountPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TINEdit5)
                            .addComponent(PhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(AccountPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SaveChanges2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SignOut, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ChangePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22))
        );

        panelBorder13.setBackground(new java.awt.Color(255, 255, 255));

        jLabel79.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sales/and/inventory/management/system/icons/Logo.png"))); // NOI18N

        jLabel81.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sales/and/inventory/management/system/icons/Calendar2.png"))); // NOI18N

        Datetxt3.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        Datetxt3.setForeground(new java.awt.Color(0, 0, 51));
        Datetxt3.setText("Date");

        jLabel82.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sales/and/inventory/management/system/icons/clock.png"))); // NOI18N

        Timetxt3.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        Timetxt3.setForeground(new java.awt.Color(0, 0, 51));
        Timetxt3.setText("Time");

        jLabel55.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(0, 0, 51));
        jLabel55.setText("Manage Account Info");

        jLabel61.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sales/and/inventory/management/system/icons/settings.png"))); // NOI18N

        javax.swing.GroupLayout panelBorder13Layout = new javax.swing.GroupLayout(panelBorder13);
        panelBorder13.setLayout(panelBorder13Layout);
        panelBorder13Layout.setHorizontalGroup(
            panelBorder13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder13Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel61)
                .addGap(18, 18, 18)
                .addComponent(jLabel55)
                .addGap(33, 33, 33)
                .addComponent(jLabel79)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelBorder13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder13Layout.createSequentialGroup()
                        .addComponent(jLabel81)
                        .addGap(18, 18, 18)
                        .addComponent(Datetxt3))
                    .addGroup(panelBorder13Layout.createSequentialGroup()
                        .addComponent(jLabel82)
                        .addGap(18, 18, 18)
                        .addComponent(Timetxt3)))
                .addGap(39, 39, 39))
        );
        panelBorder13Layout.setVerticalGroup(
            panelBorder13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder13Layout.createSequentialGroup()
                .addGroup(panelBorder13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel79, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBorder13Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(panelBorder13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel61))))
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder13Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(panelBorder13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel81)
                    .addComponent(Datetxt3))
                .addGap(18, 18, 18)
                .addGroup(panelBorder13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel82)
                    .addComponent(Timetxt3))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(AccountP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 54, Short.MAX_VALUE))
                    .addComponent(panelBorder13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(AccountP, javax.swing.GroupLayout.PREFERRED_SIZE, 568, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Account", jPanel2);

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteOrderMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteOrderMouseClicked

    private void DeleteOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteOrderActionPerformed
        DeleteOrder show = new DeleteOrder();
        show.setVisible(true);
    }//GEN-LAST:event_DeleteOrderActionPerformed

    private void ResetOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResetOrderMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ResetOrderMouseClicked

    private void ResetOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetOrderActionPerformed
        resetOrder();
    }//GEN-LAST:event_ResetOrderActionPerformed

    private void EditOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditOrderMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_EditOrderMouseClicked

    private void EditOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditOrderActionPerformed
        EditOrder show = new EditOrder();
        show.setVisible(true);
    }//GEN-LAST:event_EditOrderActionPerformed

    private void LastnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LastnameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_LastnameFocusGained

    private void LastnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LastnameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_LastnameFocusLost

    private void LastnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LastnameActionPerformed

    private void EmailAddressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailAddressFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailAddressFocusGained

    private void EmailAddressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailAddressFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailAddressFocusLost

    private void EmailAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailAddressActionPerformed

    private void PhoneNumberFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PhoneNumberFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_PhoneNumberFocusGained

    private void PhoneNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PhoneNumberFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_PhoneNumberFocusLost

    private void PhoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PhoneNumberActionPerformed

    private void UsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UsernameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameFocusGained

    private void UsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UsernameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameFocusLost

    private void UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameActionPerformed

    private void SaveChanges2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveChanges2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_SaveChanges2MouseClicked

    private void SaveChanges2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveChanges2ActionPerformed
        int p = JOptionPane.showConfirmDialog(null, "Do you really want to update your account details?", "Update", JOptionPane.YES_NO_OPTION);
         if (p == 0) {
            try {
                sqlConn = DriverManager.getConnection(dataConn, username, password);
                pst = sqlConn.prepareStatement("UPDATE user SET UFname = ?, ULname = ?, Uname = ?, UEmail = ?, UPhoneNumber = ? WHERE UID = ?");
                pst.setString(1, Firstname.getText());
                pst.setString(2, Lastname.getText());
                pst.setString(3, Username.getText());
                pst.setString(4, EmailAddress.getText());
                pst.setString(5, PhoneNumber.getText());
                pst.setInt(6, userID);
                pst.executeUpdate();
                pst.execute();


                JOptionPane.showMessageDialog(rootPane, "Updated!");
                sqlConn.close();
                Firstname.setEditable(false);
                Firstname.setBackground(Color.gray);
                Lastname.setEditable(false);
                Lastname.setBackground(Color.gray);
                Username.setEditable(false);
                Username.setBackground(Color.gray);
                EmailAddress.setEditable(false);
                EmailAddress.setBackground(Color.gray);
                PhoneNumber.setEditable(false);
                PhoneNumber.setBackground(Color.gray);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e);

            } 
        }
    }//GEN-LAST:event_SaveChanges2ActionPerformed

    private void TINEdit1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TINEdit1MouseClicked
        Firstname.setEditable(true);
        Firstname.setBackground(Color.white);
    }//GEN-LAST:event_TINEdit1MouseClicked

    private void TINEdit2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TINEdit2MouseClicked
        Lastname.setEditable(true);
        Lastname.setBackground(Color.white);
    }//GEN-LAST:event_TINEdit2MouseClicked

    private void TINEdit3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TINEdit3MouseClicked
        Username.setEditable(true);
        Username.setBackground(Color.white);
    }//GEN-LAST:event_TINEdit3MouseClicked

    private void FirstnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FirstnameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_FirstnameFocusGained

    private void FirstnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FirstnameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_FirstnameFocusLost

    private void FirstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FirstnameActionPerformed

    private void SignOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignOutMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_SignOutMouseClicked

    private void SignOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignOutActionPerformed
        int a = JOptionPane.showConfirmDialog(null, "Do you want to sign out?", "Signing out", JOptionPane.YES_NO_OPTION);
        
        if(a == 0)
        {
        System.exit(0);
        }        
    }//GEN-LAST:event_SignOutActionPerformed

    private void TINEdit4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TINEdit4MouseClicked
        EmailAddress.setEditable(true);
        EmailAddress.setBackground(Color.white);
    }//GEN-LAST:event_TINEdit4MouseClicked

    private void TINEdit5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TINEdit5MouseClicked
        PhoneNumber.setEditable(true);
        PhoneNumber.setBackground(Color.white);
    }//GEN-LAST:event_TINEdit5MouseClicked

    private void ChangePasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChangePasswordMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ChangePasswordMouseClicked

    private void ChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangePasswordActionPerformed
        ResetPassword show = new ResetPassword();
        show.setVisible(true);
    }//GEN-LAST:event_ChangePasswordActionPerformed

    private void btnCheckoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCheckoutMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCheckoutMouseClicked

    private void btnCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckoutActionPerformed
        Checkout show = new Checkout();
        show.setVisible(true);
    }//GEN-LAST:event_btnCheckoutActionPerformed

    private void DeleteOrder1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteOrder1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteOrder1MouseClicked

    private void DeleteOrder1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteOrder1ActionPerformed
        SearchPOS show = new SearchPOS();
        show.setVisible(true);
    }//GEN-LAST:event_DeleteOrder1ActionPerformed

    private void txtBarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBarcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarcodeActionPerformed

    private void txtBarcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarcodeKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            AddProductsToOrder();
        }
    }//GEN-LAST:event_txtBarcodeKeyPressed
   
    
        public static void generateTapeReceiptFolder(){
            try
        {   
            String directory = "C:\\Sales and Inventory Documents\\Tape Receipts\\";
            File Folder = new File(directory);           
            //If folder successfully created
           if(!Folder.exists()){
                Folder.mkdir();
                }             
        } 
        catch(HeadlessException | NumberFormatException ex){
            java.util.logging.Logger.getLogger(SalesAndInventoryManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(frame, "Please input details");
        }
    }


       public static void generateSalesandInventoryDocumentsFolder(){
            try
        {   
            String directory = "C:\\Sales and Inventory Documents\\";
            File Folder = new File(directory);           
            //If folder successfully created
           if(!Folder.exists()){
                Folder.mkdir();
                }             
        } 
        catch(HeadlessException | NumberFormatException ex){
            java.util.logging.Logger.getLogger(SalesAndInventoryManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(frame, "Please input details");
        }
    }
    
    
    public void resetOrder(){
        DefaultTableModel ordertable = (DefaultTableModel)POSTable.getModel();
        ordertable.setRowCount(0); 
        txtTotalAmount.setText("");
        txtChange.setText("");  
        ReceiptPreview.setText("");  
    }
    public static void AddQuantity (int Quantity, String product){
            DefaultTableModel ordertable = (DefaultTableModel)POSTable.getModel();
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment( JLabel.CENTER );
            POSTable.setDefaultRenderer(Object.class, centerRenderer);
            int rowcount = ordertable.getRowCount(); 
            ArrayList list = new ArrayList();
            for(int i = 0; i<rowcount;i++){                       
                list.add(ordertable.getValueAt(i, 0).toString());                      
            }
            for(int j = 0; j<=rowcount;j++){ 
                String duplicate = ordertable.getValueAt(j, 0).toString(); 
                if(list.contains(product)&&product.equals(duplicate)){
                    String strQuantity = ordertable.getValueAt(j, 2).toString();
                    strQuantity = Integer.toString(Quantity);
                    String strUnitPrice = ordertable.getValueAt(j, 3).toString();
                    int UnitPrice = Integer.parseInt(strUnitPrice);
                    int TotalAmount = Quantity * UnitPrice;
                    String strTotalAmount = Integer.toString(TotalAmount);
                    ordertable.setValueAt(strQuantity, j, 2);
                    ordertable.setValueAt(strTotalAmount, j, 4); 
                    JOptionPane.showMessageDialog(frame, "Quantity set!"); 
                    break;
                }
                else if(list.contains(product)&&!product.equals(duplicate)){
                    continue;
                }
                else{
                 JFrame frame = new JFrame();
                 JOptionPane.showMessageDialog(frame, "Product is not in order");   
                 break;
                }             
            }
            getTotalAmount(rowcount);  
    }
    public static void DeleteOrder(String product){
        try{
            DefaultTableModel ordertable = (DefaultTableModel)POSTable.getModel();
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment( JLabel.CENTER );
            POSTable.setDefaultRenderer(Object.class, centerRenderer);
            int rowcount = ordertable.getRowCount(); 
            ArrayList list = new ArrayList();
            for(int i = 0; i<rowcount;i++){                       
                list.add(ordertable.getValueAt(i, 0).toString());                      
            }
                for(int j = 0; j<=rowcount;j++){ 
                    String duplicate = ordertable.getValueAt(j, 0).toString(); 
                    if(list.contains(product)&&product.equals(duplicate)){
                        ordertable.removeRow(j);
                        JOptionPane.showMessageDialog(frame, "Product deleted!");                  
                    }
                    else if(list.contains(product)&&!product.equals(duplicate)){
                        continue;
                    }
                rowcount = ordertable.getRowCount(); 
                if(rowcount==0)
                    txtTotalAmount.setText("");
                else
                    getTotalAmount(rowcount);    
                }
        }
        catch(Exception e){
            
        }
    }
    
    public void AddProductsToOrder(){
            String Barcode = txtBarcode.getText(); 
            try
            { 
            sqlConn = DriverManager.getConnection(dataConn,username,password);    
            pst = sqlConn.prepareStatement("SELECT * FROM product WHERE PrBarcode = ?");       
            pst.setString(1, Barcode);
            rs = pst.executeQuery();           
            DefaultTableModel ordertable = (DefaultTableModel)POSTable.getModel();
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment( JLabel.CENTER );
            POSTable.setDefaultRenderer(Object.class, centerRenderer);
            int rowcount = ordertable.getRowCount();         
            if(rs.next()){
                if(rowcount==0){                      
                        String PrInfo[] = {rs.getString("PrID"),rs.getString("PrName"),"1",rs.getString("PrUnitPrice"),rs.getString("PrUnitPrice")};
                        ordertable.addRow(PrInfo);                                            
                }
                else{
                    ArrayList list = new ArrayList();
                    String product = rs.getString("PrID");
                    for(int i = 0; i<rowcount;i++){                       
                        list.add(ordertable.getValueAt(i, 0).toString());                      
                     }
                    for(int j = 0; j<rowcount;j++){                          
                            String duplicate = ordertable.getValueAt(j, 0).toString(); 
                            if(list.contains(product)&&product.equals(duplicate)){
                                String strQuantity = ordertable.getValueAt(j, 2).toString();
                                int Quantity = Integer.parseInt(strQuantity) + 1;
                                strQuantity = Integer.toString(Quantity);
                                String strUnitPrice = ordertable.getValueAt(j, 3).toString();
                                int UnitPrice = Integer.parseInt(strUnitPrice);
                                int TotalAmount = Quantity * UnitPrice;
                                String strTotalAmount = Integer.toString(TotalAmount);
                                ordertable.setValueAt(strQuantity, j, 2);
                                ordertable.setValueAt(strTotalAmount, j, 4);                               
                            }                               
                       }
                  if(!list.contains(product)){
                                String PrInfo[] = {rs.getString("PrID"),rs.getString("PrName"),"1",rs.getString("PrUnitPrice"),rs.getString("PrUnitPrice")};
                                ordertable.addRow(PrInfo); 
                    }
              }            
            }
            else{
            JOptionPane.showMessageDialog(this, "Product doesn't exist");  
            txtBarcode.setText("");  
            }
            rowcount = ordertable.getRowCount();
            getTotalAmount(rowcount);           
            txtBarcode.setText("");            
            }catch (SQLException ex) {
                java.util.logging.Logger.getLogger(SalesAndInventoryManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Please input the right data type.");
            } 
            catch(HeadlessException | NumberFormatException ex){
                java.util.logging.Logger.getLogger(SalesAndInventoryManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Please input details");
            } 
    }   
    public static void getTotalAmount(int rowcount){
            int TotalAmount = 0;
            if(rowcount==0){
                TotalAmount = Integer.parseInt(POSTable.getValueAt(0,4).toString());
            }
            else{
                for(int i = 0; i<rowcount; i++){
                TotalAmount = TotalAmount + Integer.parseInt(POSTable.getValueAt(i,4).toString()); 
                }
            }
            txtTotalAmount.setText(Integer.toString(TotalAmount));
         
    }
    
    public static void MakeRetailTransaction(){
           DefaultTableModel ordertable = (DefaultTableModel)POSTable.getModel();
           MAKE:
            try{
                int TotalAmount = 0;
                String strTotalAmount = null;
                strTotalAmount = txtTotalAmount.getText();
                if(strTotalAmount!=null){           
                TotalAmount = Integer.parseInt(strTotalAmount);
                String strPayment = null;
                int payment1 = Checkout.payment;
                strPayment = Integer.toString(payment1);  
                String mode = Checkout.ModeofPayment;
                String Reference = GcashReference.Gcash;
                    if(strPayment!=null){
                    int Payment = Integer.parseInt(strPayment);
                        if(Payment>0 && Payment>=TotalAmount){
                            pst = sqlConn.prepareStatement("SELECT PrId, PrStock FROM product");                                                                                     
                            ArrayList list = new ArrayList();
                            for(int i = 0; i<ordertable.getRowCount();i++){                       
                            list.add(ordertable.getValueAt(i, 0).toString());                      
                            }
                            rs = pst.executeQuery();                                                   
                            while(rs.next()){
                                for(int j = 0; j<ordertable.getRowCount();j++){   
                                String product = rs.getString("PrID");
                                String duplicate = ordertable.getValueAt(j, 0).toString(); 
                                    if(list.contains(product)&&product.equals(duplicate)){
                                    int Stock = rs.getInt("PrStock");        
                                    String strQuantity = ordertable.getValueAt(j, 2).toString();
                                    int Quantity = Integer.parseInt(strQuantity);
                                        if((Quantity<Stock&&Stock-Quantity!=0)||Stock-Quantity==0){
                                        pst = sqlConn.prepareStatement("UPDATE product SET PrStock = ? WHERE PrID = ?"); 
                                        pst.setInt(1, Stock-Quantity);
                                        pst.setString(2, product);
                                        pst.executeUpdate();                                  
                                        }  
                                        else if(Stock-Quantity<0||Stock==0){
                                        JOptionPane.showMessageDialog(frame, "Insufficient Stock, please restock.");    
                                        ordertable.setRowCount(0); 
                                        txtTotalAmount.setText("");
                                        break MAKE;                                 
                                        } 
                                    }
                                }
                            }
                                pst.close();
                                LocalDate Date = LocalDate.now();
                                LocalTime Time = LocalTime.now();
                                DateTimeFormatter dateformat = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                                DateTimeFormatter timeformat = DateTimeFormatter.ofPattern("HH:mm:ss");
                                DateTimeFormatter OrIDformat = DateTimeFormatter.ofPattern("yyyy");
                                String formattedtime = Time.format(timeformat);
                                String formatteddate = Date.format(dateformat);
                                int OrderID = 0;
                                int OrNumber = 0;
                                pst = sqlConn.prepareStatement("INSERT into orders(OrID, UID, OrNumber, OrType, PayID,OrTotalAmount,OrChange,OrDate,OrTime,OrLessVAT,OrNet_of_VAT, OrCostTotal, OrGCashReference) values (?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                pst2 = sqlConn.prepareStatement("SELECT OrID FROM orders WHERE OrID = (SELECT MAX(OrID) FROM orders)");
                                rs2 = pst2.executeQuery(); 
                                if(rs2.next()){ 
                                    int Order = rs2.getInt("OrID");
                                    if(Order != 0){
                                    OrderID = Order + 1;
                                    pst.setInt(1, OrderID);
                                    }
   
                                } 
                                else{
                                    String strOrID = Date.format(OrIDformat)+"0001";
                                    OrderID = Integer.parseInt(strOrID); 
                                    pst.setInt(1, OrderID); 
                                } 
                                pst2.close();
                                pst.setInt(2,userID);
                                pst2 = sqlConn.prepareStatement("SELECT OrNumber FROM orders WHERE OrNumber = (SELECT MAX(OrNumber) FROM orders)");
                                rs2 = pst2.executeQuery();
                                if(rs2.next()){ 
                                    int Ordernum = rs2.getInt("OrNumber");
                                    if(Ordernum != 0){
                                    OrNumber = Ordernum + 1;
                                    pst.setInt(3, OrNumber);
                                    }
   
                                } 
                                else{
                                    String strOrNum = "11000001";
                                    OrNumber = Integer.parseInt(strOrNum); 
                                    pst.setInt(3, OrNumber); 
                                }
                                pst2.close();
                                pst2 = sqlConn.prepareStatement("INSERT into payment(OrID, PayDescription, PayAmount, PayDate, PayCheckNum) values (?,?,?,?,?)");
                                pst2.setInt(1, OrderID);
                                if(mode == "Gcash"){
                                pst2.setString(2, mode); 
                                pst.setString(13, Reference);
                                }
                                else{
                                pst2.setString(2, mode);  
                                pst.setString(13, "N/A");
                                }                               
                                pst2.setInt(3, Payment);
                                pst2.setString(4, formatteddate);
                                pst2.setInt(5,0);
                                pst2.executeUpdate();
                                pst2.close();
                                pst2 = sqlConn.prepareStatement("SELECT PayID FROM payment WHERE OrID = '"+OrderID+"'");
                                rs2 = pst2.executeQuery();
                                if(rs2.next()){ 
                                    int PayID = rs2.getInt("PayID");
                                    pst.setInt(5, PayID);
                                }                            
                                String OrType = "Retail";
                                pst.setString(4, OrType);
                                pst.setInt(6, TotalAmount);
                                int Change =  Payment - TotalAmount ;
                                pst.setInt(7, Change);
                                pst.setString(8, formatteddate);
                                pst.setString(9, formattedtime);
                                double VATableSales = (double)Math.round((TotalAmount/1.12)*100)/100;
                                double VAT = (double)Math.round((VATableSales*0.12)*100)/100;
                                pst.setDouble(10, VAT);
                                pst.setDouble(11, VATableSales);  
                                pst2.close();
                                pst3 = sqlConn.prepareStatement("INSERT into order_details(OrNumber, PrID, OrDetQuantity, OrDetCostTotal, OrDetPriceTotal) values (?,?,?,?,?)");
                                pst2 = sqlConn.prepareStatement("SELECT PrID, PrCost, PrUnitPrice FROM product");
                                pst3.setInt(1,OrNumber);
                                rs2 = pst2.executeQuery();
                                while(rs2.next()){                                    
                                    for(int k = 0; k<ordertable.getRowCount();k++){
                                    String product = rs2.getString("PrID");
                                    int Cost = rs2.getInt("PrCost");
                                    int Price = rs2.getInt("PrUnitPrice");
                                    int PrID = Integer.parseInt(product);
                                    pst3.setInt(2, PrID);
                                    String duplicate = ordertable.getValueAt(k, 0).toString(); 
                                        if(list.contains(product)&&product.equals(duplicate)){
                                        String strQuantity = ordertable.getValueAt(k, 2).toString();
                                        int Quantity = Integer.parseInt(strQuantity);
                                        pst3.setInt(3, Quantity);
                                        int PrCostTotal = Cost * Quantity;
                                        int PriceTotal = Price * Quantity; 
                                        pst3.setInt(4, PrCostTotal);
                                        pst3.setInt(5, PriceTotal); 
                                        pst3.executeUpdate();
                                        }                                   
                                    }
                                    
                                }
                                
                                pst2.close();
                                pst3.close();
                                pst2 = sqlConn.prepareStatement("SELECT SUM(OrDetCostTotal) FROM order_details WHERE OrNumber ='"+OrNumber+"' ");
                                rs2 = pst2.executeQuery();
                                if(rs2.next()){
                                int OrderCostTotal = rs2.getInt(1);
                                pst.setInt(12, OrderCostTotal);   
                                }    
                                pst2.close();
                                pst.executeUpdate(); 
                                txtChange.setText(Integer.toString(Change)); 
                                ReceiptPreview();
                                JOptionPane.showMessageDialog(frame, "Transaction Successful!");
                                ordertable.setRowCount(0); 
                                txtTotalAmount.setText("");
                                txtChange.setText("");  
                                ReceiptPreview.setText("");   

                        }
                        else{
                           JOptionPane.showMessageDialog(frame, "Insufficient Payment, please input correct payment amount");    
                        }
                    }
                    else{
                    JOptionPane.showMessageDialog(frame, "Please input payment amount");
                    }
                }
                else{
                JOptionPane.showMessageDialog(frame, "Please select products");  
                }    
            }catch(NumberFormatException e){
                    JOptionPane.showMessageDialog(frame, "Please select products or input payment!"); 
            }catch (SQLException ex) {
                    JOptionPane.showMessageDialog(frame, "Please contact admin for assistance!");
        }     
    }
    
        public static void ReceiptPreview(){
            int TotalAmount = 0;
            String strTotalAmount = null;
            strTotalAmount = txtTotalAmount.getText();         
            String strPayment = null;
            int payment1 = Checkout.payment;
            strPayment = Integer.toString(payment1);  
            String mode = Checkout.ModeofPayment;
            String Reference = GcashReference.Gcash;
            LocalDate Date = LocalDate.now();
            LocalTime Time = LocalTime.now();
            DateTimeFormatter dateformat = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            DateTimeFormatter timeformat = DateTimeFormatter.ofPattern("HH:mm:ss");
            DateTimeFormatter OrIDformat = DateTimeFormatter.ofPattern("yyyy");
            String formattedtime = Time.format(timeformat);
            String formatteddate = Date.format(dateformat);
            DefaultTableModel ordertable = (DefaultTableModel)POSTable.getModel();
            ReceiptPreview.setText(ReceiptPreview.getText() + "----------------------------------------------------------------------\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "                             Receipt Preview\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "----------------------------------------------------------------------\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "                             DanPel Elegance\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "                           DAN R. PEL - Prop.\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "                       VAT REG TIN: 123456789\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "                     User Name: "+userloggedin+"\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "               Date: " +formatteddate+"    Time: "+formattedtime+"\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "----------------------------------------------------------------------\n");
            int rowcount = ordertable.getRowCount();
            ReceiptPreview.setText(ReceiptPreview.getText() + "QTY        PRICE        TOTAL        ITEM\n");
            for(int j = 0; j<rowcount;j++){                          
                String Quantity = ordertable.getValueAt(j, 2).toString();
                String Product = ordertable.getValueAt(j, 1).toString();
                String Price = ordertable.getValueAt(j, 3).toString();
                int qty = Integer.parseInt(Quantity);
                int prc = Integer.parseInt(Price);
                int total = qty*prc;
                String strtotal = Integer.toString(total);
                ReceiptPreview.setText(ReceiptPreview.getText() +Quantity+"              "+Price+"            "+strtotal+"             "+Product+"\n");                                                          
                }
            ReceiptPreview.setText(ReceiptPreview.getText() + "----------------------------------------------------------------------\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "Total Amount Due: "+txtTotalAmount.getText()+"\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "Payment: "+strPayment+"\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "Change: "+txtChange.getText()+"\n\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "----------------------------------------------------------------------\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "           Tell us about your visit! Share your experience\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "                   and approach any of our staff!\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "                      Thank you come again!\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "                This serves as your OFFICIAL RECEIPT\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "             Valid for 5 years after the specified date\n");
            ReceiptPreview.setText(ReceiptPreview.getText() + "----------------------------------------------------------------------\n");

    }
         
         public final void updateAccountInfo()
    {
         try
        { 
            sqlConn = DriverManager.getConnection(dataConn,username,password);
            pst = sqlConn.prepareStatement("SELECT * FROM user where UID = ?");
            pst.setInt(1, userID);
            rs =pst.executeQuery();
          
            while(rs.next()){              
                Firstname.setText(rs.getString("UFname"));
                Lastname.setText(rs.getString("ULname"));
                Username.setText(rs.getString("Uname"));
                EmailAddress.setText(rs.getString("UEmail"));
                PhoneNumber.setText(rs.getString("UPhoneNumber"));
                    
            }
         
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        } 
    } 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AccountP;
    private javax.swing.JButton ChangePassword;
    private javax.swing.JLabel Datetxt2;
    private javax.swing.JLabel Datetxt3;
    private javax.swing.JButton DeleteOrder;
    private javax.swing.JButton DeleteOrder1;
    private javax.swing.JButton EditOrder;
    private javax.swing.JTextField EmailAddress;
    private javax.swing.JTextField Firstname;
    private javax.swing.JTextField Lastname;
    private javax.swing.JPanel POSP;
    private static swing.Table POSTable;
    private javax.swing.JTextField PhoneNumber;
    private static javax.swing.JTextArea ReceiptPreview;
    private javax.swing.JButton ResetOrder;
    private javax.swing.JButton SaveChanges2;
    private javax.swing.JButton SignOut;
    private javax.swing.JLabel TINEdit1;
    private javax.swing.JLabel TINEdit2;
    private javax.swing.JLabel TINEdit3;
    private javax.swing.JLabel TINEdit4;
    private javax.swing.JLabel TINEdit5;
    private javax.swing.JLabel Timetxt2;
    private javax.swing.JLabel Timetxt3;
    private javax.swing.JTextField Username;
    private javax.swing.JButton btnCheckout;
    private javax.swing.JLabel cashiername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private swing.PanelBorder panelBorder1;
    private swing.PanelBorder panelBorder13;
    private swing.PanelBorder panelBorder16;
    private swing.PanelBorder panelBorder2;
    private javax.swing.JTextField txtBarcode;
    private static javax.swing.JTextField txtChange;
    private static javax.swing.JTextField txtTotalAmount;
    // End of variables declaration//GEN-END:variables
}
